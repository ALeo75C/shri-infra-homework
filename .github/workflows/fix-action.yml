name: Fix
run-name: ${{ github.actor }} starts fixing action ⚒
on:  
  workflow_dispatch:
        inputs:
            version: 
                description: 'Номер версии. Например: v123'
                required: true
permissions:
  contents: write
jobs:
  tests:
    uses: ./.github/workflows/test-and_lint.yml
  buildDocker:
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      issues: write
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ inputs.version }}
      - run: npm run build:docker
      - run: |
            cat << 'EOT' > key.json
            ${{ secrets.YC_REGISTRY }}
            EOT
            cat key.json | docker login --username json_key --password-stdin cr.yandex
            dockerUrl="${{ secrets.YC_REGISTRY_ID }}/app:${{ inputs.version }}"
            dockerUrlFix="${dockerUrl}_fix${{ github.run_number }}"
            docker tag infra-hw $dockerUrlFix
            docker push $dockerUrlFix
            docker tag infra-hw "${dockerUrl}_latest"
            docker push "${dockerUrl}_latest"
  addTag: 
    needs: buildDocker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ inputs.version }}
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

          git tag ${{ inputs.version }}_fix#${{ github.run_number }}
          git push --tags --set-upstream origin releases/${{ inputs.version }}
  add-comment:
    needs: addTag
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: releases/${{ inputs.version }}
      - name: Add comment
        run: |
          DATE=$(date "+%Y-%m-%d")
          LATEST_TAG=$(git describe --tags --abbrev=0 || true)

          if [ "$LATEST_TAG" = "" ]; then
            COMMIT_LOG=$(git log HEAD --all)
            echo "Gathering commit log from head"
          else 
            COMMIT_LOG=$(git log $LATEST_TAG..HEAD --all)
            echo "Gathering commit log from $LATEST_TAG to HEAD"
          fi

          BODY="Release fix created. Fix date: $DATE\nAuthor: ${{ github.actor }}\nCommit log:\n$COMMIT_LOG\nDocker registry url: cr.yandex/crpqfmcpde6ccgipohk3/app:${{ inputs.version }}_fix${{ github.run_number }}"
          issueNumber=$(gh issue list -S "in:title Release ${{ inputs.version }}" | grep 'Release ${{ inputs.version }}' | awk '{print $1}')
          gh issue comment "$issueNumber" --body "$(echo -e $BODY)"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        
      