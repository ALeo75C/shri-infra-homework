name: Deploy
run-name: ${{ github.actor }} is starting release process üöÄ
on: 
    workflow_dispatch:
        inputs:
            deploy_version: 
                description: '–ù–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏'
                required: true
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
            cat << 'EOT' > key.json
            ${{ secrets.YC_REGISTRY }}
            EOT
            cat key.json | docker login --username json_key --password-stdin cr.yandex
            docker manifest inspect cr.yandex/crpqfmcpde6ccgipohk3/app:${{ inputs.deploy_version }}_latest
      - run: |
            cat << 'EOT' > ssh_keys
            ${{ secrets.SSH_PRIVATE_KEY }}
            EOT
            chmod 600 ssh_keys
      - run: |
            cat << 'EOT' > ssh_keys.pub
            ${{ secrets.SSH_PUBLIC_KEY }}
            EOT
            chmod 600 ssh_keys.pub
      - run: | 
          ssh -i ssh_keys -o "IdentitiesOnly=true" -o StrictHostKeyChecking=no -lzaizpr 158.160.140.187 << EOF
           container=$(docker ps -a | grep 'super_duper_docker_name')

            if [ container != "" ]; then 
                docker stop super_duper_docker_name && docker rm super_duper_docker_name
            fi

            docker pull cr.yandex/crpqfmcpde6ccgipohk3/app:${{ inputs.deploy_version }}_latest
            docker run -d --name super_duper_docker_name -p 3000:3000 -t cr.yandex/crpqfmcpde6ccgipohk3/app:${{ inputs.deploy_version }}_latest
          EOF
  add-comment:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Add comment
        run: |
          DATE=$(date "+%Y-%m-%d")
          BODY="Release date: $DATE\nAuthor: ${{ github.actor }}\nVersion: ${{ github.run_number }}\nCommit log:\n$COMMIT_LOG\nDocker registry url: "cr.yandex/crpqfmcpde6ccgipohk3/app:${{ inputs.deploy_version }}""
          issueNumber=$(gh issue list -S "in:title Release ${{ inputs.deploy_version }}" | grep 'Release ${{ inputs.deploy_version }}' | awk '{print $1}')
          gh issue comment "$issueNumber" --body "$BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
